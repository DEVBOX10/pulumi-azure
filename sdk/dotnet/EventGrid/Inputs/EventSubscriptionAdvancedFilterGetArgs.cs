// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventGrid.Inputs
{

    public sealed class EventSubscriptionAdvancedFilterGetArgs : Pulumi.ResourceArgs
    {
        [Input("boolEquals")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterBoolEqualGetArgs>? _boolEquals;

        /// <summary>
        /// Compares a value of an event using a single boolean value.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterBoolEqualGetArgs> BoolEquals
        {
            get => _boolEquals ?? (_boolEquals = new InputList<Inputs.EventSubscriptionAdvancedFilterBoolEqualGetArgs>());
            set => _boolEquals = value;
        }

        [Input("numberGreaterThanOrEquals")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanOrEqualGetArgs>? _numberGreaterThanOrEquals;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanOrEqualGetArgs> NumberGreaterThanOrEquals
        {
            get => _numberGreaterThanOrEquals ?? (_numberGreaterThanOrEquals = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanOrEqualGetArgs>());
            set => _numberGreaterThanOrEquals = value;
        }

        [Input("numberGreaterThans")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanGetArgs>? _numberGreaterThans;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanGetArgs> NumberGreaterThans
        {
            get => _numberGreaterThans ?? (_numberGreaterThans = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanGetArgs>());
            set => _numberGreaterThans = value;
        }

        [Input("numberIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberInGetArgs>? _numberIns;

        /// <summary>
        /// Compares a value of an event using multiple floating point numbers.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberInGetArgs> NumberIns
        {
            get => _numberIns ?? (_numberIns = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberInGetArgs>());
            set => _numberIns = value;
        }

        [Input("numberLessThanOrEquals")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanOrEqualGetArgs>? _numberLessThanOrEquals;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanOrEqualGetArgs> NumberLessThanOrEquals
        {
            get => _numberLessThanOrEquals ?? (_numberLessThanOrEquals = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanOrEqualGetArgs>());
            set => _numberLessThanOrEquals = value;
        }

        [Input("numberLessThans")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanGetArgs>? _numberLessThans;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanGetArgs> NumberLessThans
        {
            get => _numberLessThans ?? (_numberLessThans = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanGetArgs>());
            set => _numberLessThans = value;
        }

        [Input("numberNotIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberNotInGetArgs>? _numberNotIns;

        /// <summary>
        /// Compares a value of an event using multiple floating point numbers.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberNotInGetArgs> NumberNotIns
        {
            get => _numberNotIns ?? (_numberNotIns = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberNotInGetArgs>());
            set => _numberNotIns = value;
        }

        [Input("stringBeginsWiths")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringBeginsWithGetArgs>? _stringBeginsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringBeginsWithGetArgs> StringBeginsWiths
        {
            get => _stringBeginsWiths ?? (_stringBeginsWiths = new InputList<Inputs.EventSubscriptionAdvancedFilterStringBeginsWithGetArgs>());
            set => _stringBeginsWiths = value;
        }

        [Input("stringContains")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringContainGetArgs>? _stringContains;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringContainGetArgs> StringContains
        {
            get => _stringContains ?? (_stringContains = new InputList<Inputs.EventSubscriptionAdvancedFilterStringContainGetArgs>());
            set => _stringContains = value;
        }

        [Input("stringEndsWiths")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringEndsWithGetArgs>? _stringEndsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringEndsWithGetArgs> StringEndsWiths
        {
            get => _stringEndsWiths ?? (_stringEndsWiths = new InputList<Inputs.EventSubscriptionAdvancedFilterStringEndsWithGetArgs>());
            set => _stringEndsWiths = value;
        }

        [Input("stringIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringInGetArgs>? _stringIns;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringInGetArgs> StringIns
        {
            get => _stringIns ?? (_stringIns = new InputList<Inputs.EventSubscriptionAdvancedFilterStringInGetArgs>());
            set => _stringIns = value;
        }

        [Input("stringNotIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringNotInGetArgs>? _stringNotIns;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringNotInGetArgs> StringNotIns
        {
            get => _stringNotIns ?? (_stringNotIns = new InputList<Inputs.EventSubscriptionAdvancedFilterStringNotInGetArgs>());
            set => _stringNotIns = value;
        }

        public EventSubscriptionAdvancedFilterGetArgs()
        {
        }
    }
}
