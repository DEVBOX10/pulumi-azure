// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Azure.EventGrid.Inputs
{

    public sealed class EventSubscriptionAdvancedFilterArgs : Pulumi.ResourceArgs
    {
        [Input("boolEquals")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterBoolEqualArgs>? _boolEquals;

        /// <summary>
        /// Compares a value of an event using a single boolean value.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterBoolEqualArgs> BoolEquals
        {
            get => _boolEquals ?? (_boolEquals = new InputList<Inputs.EventSubscriptionAdvancedFilterBoolEqualArgs>());
            set => _boolEquals = value;
        }

        [Input("numberGreaterThanOrEquals")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>? _numberGreaterThanOrEquals;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs> NumberGreaterThanOrEquals
        {
            get => _numberGreaterThanOrEquals ?? (_numberGreaterThanOrEquals = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>());
            set => _numberGreaterThanOrEquals = value;
        }

        [Input("numberGreaterThans")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanArgs>? _numberGreaterThans;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanArgs> NumberGreaterThans
        {
            get => _numberGreaterThans ?? (_numberGreaterThans = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberGreaterThanArgs>());
            set => _numberGreaterThans = value;
        }

        [Input("numberIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberInArgs>? _numberIns;

        /// <summary>
        /// Compares a value of an event using multiple floating point numbers.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberInArgs> NumberIns
        {
            get => _numberIns ?? (_numberIns = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberInArgs>());
            set => _numberIns = value;
        }

        [Input("numberLessThanOrEquals")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>? _numberLessThanOrEquals;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs> NumberLessThanOrEquals
        {
            get => _numberLessThanOrEquals ?? (_numberLessThanOrEquals = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>());
            set => _numberLessThanOrEquals = value;
        }

        [Input("numberLessThans")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanArgs>? _numberLessThans;

        /// <summary>
        /// Compares a value of an event using a single floating point number.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanArgs> NumberLessThans
        {
            get => _numberLessThans ?? (_numberLessThans = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberLessThanArgs>());
            set => _numberLessThans = value;
        }

        [Input("numberNotIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterNumberNotInArgs>? _numberNotIns;

        /// <summary>
        /// Compares a value of an event using multiple floating point numbers.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterNumberNotInArgs> NumberNotIns
        {
            get => _numberNotIns ?? (_numberNotIns = new InputList<Inputs.EventSubscriptionAdvancedFilterNumberNotInArgs>());
            set => _numberNotIns = value;
        }

        [Input("stringBeginsWiths")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringBeginsWithArgs>? _stringBeginsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringBeginsWithArgs> StringBeginsWiths
        {
            get => _stringBeginsWiths ?? (_stringBeginsWiths = new InputList<Inputs.EventSubscriptionAdvancedFilterStringBeginsWithArgs>());
            set => _stringBeginsWiths = value;
        }

        [Input("stringContains")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringContainArgs>? _stringContains;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringContainArgs> StringContains
        {
            get => _stringContains ?? (_stringContains = new InputList<Inputs.EventSubscriptionAdvancedFilterStringContainArgs>());
            set => _stringContains = value;
        }

        [Input("stringEndsWiths")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringEndsWithArgs>? _stringEndsWiths;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringEndsWithArgs> StringEndsWiths
        {
            get => _stringEndsWiths ?? (_stringEndsWiths = new InputList<Inputs.EventSubscriptionAdvancedFilterStringEndsWithArgs>());
            set => _stringEndsWiths = value;
        }

        [Input("stringIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringInArgs>? _stringIns;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringInArgs> StringIns
        {
            get => _stringIns ?? (_stringIns = new InputList<Inputs.EventSubscriptionAdvancedFilterStringInArgs>());
            set => _stringIns = value;
        }

        [Input("stringNotIns")]
        private InputList<Inputs.EventSubscriptionAdvancedFilterStringNotInArgs>? _stringNotIns;

        /// <summary>
        /// Compares a value of an event using multiple string values.
        /// </summary>
        public InputList<Inputs.EventSubscriptionAdvancedFilterStringNotInArgs> StringNotIns
        {
            get => _stringNotIns ?? (_stringNotIns = new InputList<Inputs.EventSubscriptionAdvancedFilterStringNotInArgs>());
            set => _stringNotIns = value;
        }

        public EventSubscriptionAdvancedFilterArgs()
        {
        }
    }
}
