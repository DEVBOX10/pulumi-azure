// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.inputs;

import com.pulumi.azure.hdinsight.inputs.InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacityArgs;
import com.pulumi.azure.hdinsight.inputs.InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs extends com.pulumi.resources.ResourceArgs {

    public static final InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs Empty = new InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs();

    /**
     * @deprecated
     * HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead.
     * 
     */
    @Deprecated /* HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead. */
    @Import(name="capacity")
    private @Nullable Output<InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacityArgs> capacity;

    /**
     * @deprecated
     * HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead.
     * 
     */
    @Deprecated /* HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead. */
    public Optional<Output<InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacityArgs>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * A `recurrence` block as defined below.
     * 
     */
    @Import(name="recurrence")
    private @Nullable Output<InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceArgs> recurrence;

    /**
     * @return A `recurrence` block as defined below.
     * 
     */
    public Optional<Output<InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceArgs>> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }

    private InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs() {}

    private InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs(InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs $) {
        this.capacity = $.capacity;
        this.recurrence = $.recurrence;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs $;

        public Builder() {
            $ = new InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs();
        }

        public Builder(InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs defaults) {
            $ = new InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead.
         * 
         */
        @Deprecated /* HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead. */
        public Builder capacity(@Nullable Output<InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacityArgs> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead.
         * 
         */
        @Deprecated /* HDInsight interactive query clusters can no longer be configured through `autoscale.0.capacity`. Use `autoscale.0.recurrence` instead. */
        public Builder capacity(InteractiveQueryClusterRolesWorkerNodeAutoscaleCapacityArgs capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param recurrence A `recurrence` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder recurrence(@Nullable Output<InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceArgs> recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        /**
         * @param recurrence A `recurrence` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder recurrence(InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceArgs recurrence) {
            return recurrence(Output.of(recurrence));
        }

        public InteractiveQueryClusterRolesWorkerNodeAutoscaleArgs build() {
            return $;
        }
    }

}
