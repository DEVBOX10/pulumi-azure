// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.azure.media.inputs.StreamingPolicyEnvelopeEncryptionDefaultContentKeyArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyEnvelopeEncryptionEnabledProtocolsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamingPolicyEnvelopeEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamingPolicyEnvelopeEncryptionArgs Empty = new StreamingPolicyEnvelopeEncryptionArgs();

    /**
     * The URL template for the custom service that delivers content keys to the end user. This is not required when using Azure Media Services for issuing keys. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="customKeysAcquisitionUrlTemplate")
    private @Nullable Output<String> customKeysAcquisitionUrlTemplate;

    /**
     * @return The URL template for the custom service that delivers content keys to the end user. This is not required when using Azure Media Services for issuing keys. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<String>> customKeysAcquisitionUrlTemplate() {
        return Optional.ofNullable(this.customKeysAcquisitionUrlTemplate);
    }

    /**
     * A `default_content_key` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="defaultContentKey")
    private @Nullable Output<StreamingPolicyEnvelopeEncryptionDefaultContentKeyArgs> defaultContentKey;

    /**
     * @return A `default_content_key` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyEnvelopeEncryptionDefaultContentKeyArgs>> defaultContentKey() {
        return Optional.ofNullable(this.defaultContentKey);
    }

    /**
     * A `enabled_protocols` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="enabledProtocols")
    private @Nullable Output<StreamingPolicyEnvelopeEncryptionEnabledProtocolsArgs> enabledProtocols;

    /**
     * @return A `enabled_protocols` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyEnvelopeEncryptionEnabledProtocolsArgs>> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    private StreamingPolicyEnvelopeEncryptionArgs() {}

    private StreamingPolicyEnvelopeEncryptionArgs(StreamingPolicyEnvelopeEncryptionArgs $) {
        this.customKeysAcquisitionUrlTemplate = $.customKeysAcquisitionUrlTemplate;
        this.defaultContentKey = $.defaultContentKey;
        this.enabledProtocols = $.enabledProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamingPolicyEnvelopeEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamingPolicyEnvelopeEncryptionArgs $;

        public Builder() {
            $ = new StreamingPolicyEnvelopeEncryptionArgs();
        }

        public Builder(StreamingPolicyEnvelopeEncryptionArgs defaults) {
            $ = new StreamingPolicyEnvelopeEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customKeysAcquisitionUrlTemplate The URL template for the custom service that delivers content keys to the end user. This is not required when using Azure Media Services for issuing keys. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder customKeysAcquisitionUrlTemplate(@Nullable Output<String> customKeysAcquisitionUrlTemplate) {
            $.customKeysAcquisitionUrlTemplate = customKeysAcquisitionUrlTemplate;
            return this;
        }

        /**
         * @param customKeysAcquisitionUrlTemplate The URL template for the custom service that delivers content keys to the end user. This is not required when using Azure Media Services for issuing keys. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder customKeysAcquisitionUrlTemplate(String customKeysAcquisitionUrlTemplate) {
            return customKeysAcquisitionUrlTemplate(Output.of(customKeysAcquisitionUrlTemplate));
        }

        /**
         * @param defaultContentKey A `default_content_key` block as defined above. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKey(@Nullable Output<StreamingPolicyEnvelopeEncryptionDefaultContentKeyArgs> defaultContentKey) {
            $.defaultContentKey = defaultContentKey;
            return this;
        }

        /**
         * @param defaultContentKey A `default_content_key` block as defined above. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKey(StreamingPolicyEnvelopeEncryptionDefaultContentKeyArgs defaultContentKey) {
            return defaultContentKey(Output.of(defaultContentKey));
        }

        /**
         * @param enabledProtocols A `enabled_protocols` block as defined above. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocols(@Nullable Output<StreamingPolicyEnvelopeEncryptionEnabledProtocolsArgs> enabledProtocols) {
            $.enabledProtocols = enabledProtocols;
            return this;
        }

        /**
         * @param enabledProtocols A `enabled_protocols` block as defined above. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocols(StreamingPolicyEnvelopeEncryptionEnabledProtocolsArgs enabledProtocols) {
            return enabledProtocols(Output.of(enabledProtocols));
        }

        public StreamingPolicyEnvelopeEncryptionArgs build() {
            return $;
        }
    }

}
