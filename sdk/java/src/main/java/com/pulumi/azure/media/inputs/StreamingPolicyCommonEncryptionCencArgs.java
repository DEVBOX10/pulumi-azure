// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCencClearKeyEncryptionArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCencClearTrackArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCencDefaultContentKeyArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCencDrmPlayreadyArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCencEnabledProtocolsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamingPolicyCommonEncryptionCencArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamingPolicyCommonEncryptionCencArgs Empty = new StreamingPolicyCommonEncryptionCencArgs();

    /**
     * A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="clearKeyEncryption")
    private @Nullable Output<StreamingPolicyCommonEncryptionCencClearKeyEncryptionArgs> clearKeyEncryption;

    /**
     * @return A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCencClearKeyEncryptionArgs>> clearKeyEncryption() {
        return Optional.ofNullable(this.clearKeyEncryption);
    }

    /**
     * One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="clearTracks")
    private @Nullable Output<List<StreamingPolicyCommonEncryptionCencClearTrackArgs>> clearTracks;

    /**
     * @return One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<List<StreamingPolicyCommonEncryptionCencClearTrackArgs>>> clearTracks() {
        return Optional.ofNullable(this.clearTracks);
    }

    /**
     * One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="contentKeyToTrackMappings")
    private @Nullable Output<List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingArgs>> contentKeyToTrackMappings;

    /**
     * @return One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingArgs>>> contentKeyToTrackMappings() {
        return Optional.ofNullable(this.contentKeyToTrackMappings);
    }

    /**
     * A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="defaultContentKey")
    private @Nullable Output<StreamingPolicyCommonEncryptionCencDefaultContentKeyArgs> defaultContentKey;

    /**
     * @return A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCencDefaultContentKeyArgs>> defaultContentKey() {
        return Optional.ofNullable(this.defaultContentKey);
    }

    /**
     * A `drm_playready` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="drmPlayready")
    private @Nullable Output<StreamingPolicyCommonEncryptionCencDrmPlayreadyArgs> drmPlayready;

    /**
     * @return A `drm_playready` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCencDrmPlayreadyArgs>> drmPlayready() {
        return Optional.ofNullable(this.drmPlayready);
    }

    /**
     * The URL template for the custom service that delivers licenses to the end user. This is not required when using Azure Media Services for issuing licenses. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="drmWidevineCustomLicenseAcquisitionUrlTemplate")
    private @Nullable Output<String> drmWidevineCustomLicenseAcquisitionUrlTemplate;

    /**
     * @return The URL template for the custom service that delivers licenses to the end user. This is not required when using Azure Media Services for issuing licenses. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<String>> drmWidevineCustomLicenseAcquisitionUrlTemplate() {
        return Optional.ofNullable(this.drmWidevineCustomLicenseAcquisitionUrlTemplate);
    }

    /**
     * A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="enabledProtocols")
    private @Nullable Output<StreamingPolicyCommonEncryptionCencEnabledProtocolsArgs> enabledProtocols;

    /**
     * @return A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCencEnabledProtocolsArgs>> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    private StreamingPolicyCommonEncryptionCencArgs() {}

    private StreamingPolicyCommonEncryptionCencArgs(StreamingPolicyCommonEncryptionCencArgs $) {
        this.clearKeyEncryption = $.clearKeyEncryption;
        this.clearTracks = $.clearTracks;
        this.contentKeyToTrackMappings = $.contentKeyToTrackMappings;
        this.defaultContentKey = $.defaultContentKey;
        this.drmPlayready = $.drmPlayready;
        this.drmWidevineCustomLicenseAcquisitionUrlTemplate = $.drmWidevineCustomLicenseAcquisitionUrlTemplate;
        this.enabledProtocols = $.enabledProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamingPolicyCommonEncryptionCencArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamingPolicyCommonEncryptionCencArgs $;

        public Builder() {
            $ = new StreamingPolicyCommonEncryptionCencArgs();
        }

        public Builder(StreamingPolicyCommonEncryptionCencArgs defaults) {
            $ = new StreamingPolicyCommonEncryptionCencArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clearKeyEncryption A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder clearKeyEncryption(@Nullable Output<StreamingPolicyCommonEncryptionCencClearKeyEncryptionArgs> clearKeyEncryption) {
            $.clearKeyEncryption = clearKeyEncryption;
            return this;
        }

        /**
         * @param clearKeyEncryption A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder clearKeyEncryption(StreamingPolicyCommonEncryptionCencClearKeyEncryptionArgs clearKeyEncryption) {
            return clearKeyEncryption(Output.of(clearKeyEncryption));
        }

        /**
         * @param clearTracks One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder clearTracks(@Nullable Output<List<StreamingPolicyCommonEncryptionCencClearTrackArgs>> clearTracks) {
            $.clearTracks = clearTracks;
            return this;
        }

        /**
         * @param clearTracks One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder clearTracks(List<StreamingPolicyCommonEncryptionCencClearTrackArgs> clearTracks) {
            return clearTracks(Output.of(clearTracks));
        }

        /**
         * @param clearTracks One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder clearTracks(StreamingPolicyCommonEncryptionCencClearTrackArgs... clearTracks) {
            return clearTracks(List.of(clearTracks));
        }

        /**
         * @param contentKeyToTrackMappings One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder contentKeyToTrackMappings(@Nullable Output<List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingArgs>> contentKeyToTrackMappings) {
            $.contentKeyToTrackMappings = contentKeyToTrackMappings;
            return this;
        }

        /**
         * @param contentKeyToTrackMappings One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder contentKeyToTrackMappings(List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingArgs> contentKeyToTrackMappings) {
            return contentKeyToTrackMappings(Output.of(contentKeyToTrackMappings));
        }

        /**
         * @param contentKeyToTrackMappings One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder contentKeyToTrackMappings(StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingArgs... contentKeyToTrackMappings) {
            return contentKeyToTrackMappings(List.of(contentKeyToTrackMappings));
        }

        /**
         * @param defaultContentKey A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKey(@Nullable Output<StreamingPolicyCommonEncryptionCencDefaultContentKeyArgs> defaultContentKey) {
            $.defaultContentKey = defaultContentKey;
            return this;
        }

        /**
         * @param defaultContentKey A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKey(StreamingPolicyCommonEncryptionCencDefaultContentKeyArgs defaultContentKey) {
            return defaultContentKey(Output.of(defaultContentKey));
        }

        /**
         * @param drmPlayready A `drm_playready` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder drmPlayready(@Nullable Output<StreamingPolicyCommonEncryptionCencDrmPlayreadyArgs> drmPlayready) {
            $.drmPlayready = drmPlayready;
            return this;
        }

        /**
         * @param drmPlayready A `drm_playready` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder drmPlayready(StreamingPolicyCommonEncryptionCencDrmPlayreadyArgs drmPlayready) {
            return drmPlayready(Output.of(drmPlayready));
        }

        /**
         * @param drmWidevineCustomLicenseAcquisitionUrlTemplate The URL template for the custom service that delivers licenses to the end user. This is not required when using Azure Media Services for issuing licenses. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder drmWidevineCustomLicenseAcquisitionUrlTemplate(@Nullable Output<String> drmWidevineCustomLicenseAcquisitionUrlTemplate) {
            $.drmWidevineCustomLicenseAcquisitionUrlTemplate = drmWidevineCustomLicenseAcquisitionUrlTemplate;
            return this;
        }

        /**
         * @param drmWidevineCustomLicenseAcquisitionUrlTemplate The URL template for the custom service that delivers licenses to the end user. This is not required when using Azure Media Services for issuing licenses. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder drmWidevineCustomLicenseAcquisitionUrlTemplate(String drmWidevineCustomLicenseAcquisitionUrlTemplate) {
            return drmWidevineCustomLicenseAcquisitionUrlTemplate(Output.of(drmWidevineCustomLicenseAcquisitionUrlTemplate));
        }

        /**
         * @param enabledProtocols A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocols(@Nullable Output<StreamingPolicyCommonEncryptionCencEnabledProtocolsArgs> enabledProtocols) {
            $.enabledProtocols = enabledProtocols;
            return this;
        }

        /**
         * @param enabledProtocols A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocols(StreamingPolicyCommonEncryptionCencEnabledProtocolsArgs enabledProtocols) {
            return enabledProtocols(Output.of(enabledProtocols));
        }

        public StreamingPolicyCommonEncryptionCencArgs build() {
            return $;
        }
    }

}
